#include <iostream>

using namespace std;

// Definisi struct untuk node
struct Node {
    int data;
    Node* next;
};

// Fungsi untuk menambahkan node di depan linked list
void push(Node** head_ref, int new_data) {
    // Alokasi node baru
    Node* new_node = new Node();

    // Masukkan data
    new_node->data = new_data;

    // Buat node baru sebagai head
    new_node->next = (*head_ref);

    // Pindahkan head ke node baru
    (*head_ref) = new_node;
}

// Fungsi untuk menambahkan node di akhir linked list
void append(Node** head_ref, int new_data) {
    // Alokasi node baru
    Node* new_node = new Node();

    Node* last = *head_ref; // Digunakan untuk menelusuri linked list sampai node terakhir

    // Masukkan data
    new_node->data = new_data;

    // Node baru akan menjadi node terakhir, jadi next nya null
    new_node->next = nullptr;

    // Jika linked list kosong, maka node baru menjadi head
    if (*head_ref == nullptr) {
        *head_ref = new_node;
        return;
    }

    // Jika linked list tidak kosong, cari node terakhir
    while (last->next != nullptr) {
        last = last->next;
    }

    // Ubah next dari node terakhir
    last->next = new_node;
}

// Fungsi untuk menampilkan linked list
void printList(Node* node) {
    while (node != nullptr) {
        cout << node->data << " ";
        node = node->next;
    }
    cout << endl;
}

int main() {
    // Inisialisasi linked list kosong
    Node* head = nullptr;

    // Menambahkan beberapa elemen ke linked list
    append(&head, 6);
    push(&head, 7);
    push(&head, 1);
    append(&head, 4);

    // Menampilkan linked list
    cout << "Created Linked list is: ";
    printList(head);

    return 0;
}
